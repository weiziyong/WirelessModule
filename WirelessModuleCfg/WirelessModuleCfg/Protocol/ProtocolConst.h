//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CProtocolConst.h
//  @ Date : 2014/10/29 星期三
//  @ Author :
//
//


#if !defined(_CPROTOCOLCONST_H)
#define _CPROTOCOLCONST_H

#include "../stdafx.h"

class CProtocolConst
{
    public:

        static CONST DWORD BYTES_SIZE_1K = 1024;
        static CONST DWORD CMD_BUF_LEN = 10 * BYTES_SIZE_1K;

        // 命令中固定字段的长度
        static CONST DWORD FIELD_LEN_FRAME_HEAD = 1;
        static CONST DWORD FIELD_LEN_PRESERVE_WORD = 1;
        static CONST DWORD FIELD_LEN_CMD_ID = 1;
        static CONST DWORD FIELD_LEN_CHECKSUM = 1;

        static CONST DWORD SEARCH_ACK_CMD_DATA_LEN = 24;
        static CONST DWORD MAX_CMD_DATA_BUF_LEN = CMD_BUF_LEN -
                FIELD_LEN_FRAME_HEAD -
                FIELD_LEN_PRESERVE_WORD -
                FIELD_LEN_CMD_ID -
                FIELD_LEN_CHECKSUM;
        static CONST DWORD OFFSET_FRAME_HEAD = 0;
        static CONST DWORD OFFSET_PRESERVE_WORD = 1;
        static CONST DWORD OFFSET_CMD_WORD = 2;
        static CONST DWORD OFFSET_CMD_DATA = 3;
        static CONST DWORD DEFAULT_CMD_LEN = 5;
        static CONST DWORD OFFSET_DEVICE_ID = 3;
        static CONST DWORD OFFSET_PAGE_TOTAL = 4;
        static CONST DWORD OFFSET_PAGE_SIZE = 6;
        static CONST DWORD OFFSET_WRITE_PAGE_CODE = 5;

        // 默认帧头
        static CONST DWORD DEFAULT_FRAME_HEAD = 0X7E;

        // 默认保留字
        static CONST DWORD DEFAULT_PRESERVE_WORD = 0X00;


        // 配置/应答命令的命令字定义
        static CONST DWORD CMD_SET_BAUD = 0X01;
        static CONST DWORD ACK_CMD_SET_BAUD = 0X02;

        static CONST DWORD CMD_SET_COMM_CHANNEL = 0X03;
        static CONST DWORD ACK_CMD_SET_COMM_CHANNEL = 0X04;

        static CONST DWORD CMD_SET_BAND = 0X05;
        static CONST DWORD ACK_CMD_SET_BAND = 0X06;

        static CONST DWORD CMD_CFG_SEARCH = 0X07;
        static CONST DWORD ACK_CMD_CFG_SEARCH = 0X08;

        static CONST DWORD CMD_CFG_MDL_NET_ID = 0X09;
        static CONST DWORD ACK_CMD_CFG_MDL_NET_ID = 0X0A;

        // 固件升级相关命令字定义
        static CONST DWORD CMD_CONN_DEVICE = 0X80;
        static CONST DWORD ACK_CMD_CONN_DEVICE = 0X81;

        static CONST DWORD CMD_SEND_FIRMWARE_CODE = 0X82;
        static CONST DWORD ACK_CMD_SEND_FIRMWARE_CODE = 0X83;

        static CONST DWORD CMD_READ_FIRMWARE_CODE = 0X84;
        static CONST DWORD ACK_CMD_READ_FIRMWARE_CODE = 0X85;

        static CONST DWORD CMD_UPDATE_FIRMWARE_FINISH = 0X86;
        static CONST DWORD ACK_CMD_UPDATE_FIRMWARE_FINISH = 0X87;

        // 无效的字节值
        static CONST DWORD INVALID_BYTE_VALUE = 0;

        // 无效的带宽索引值
        static CONST DWORD INVALID_TRANS_SPEED_IDX = 0;

        static CONST DWORD MIN_BAUDRATE_IDX = 1;
        static CONST DWORD MAX_BAUDRATE_IDX = 8;
        static CONST DWORD MAX_TRANS_SPEED_IDX = 10;
        static CONST DWORD MAX_TRANS_SPEED_IDX_433M = 6;
        static CONST DWORD MAX_TRANS_SPEED_IDX_868M = 7;

        static CONST TCHAR szFreq315M[];
        static CONST TCHAR szFreq433M[];
        static CONST TCHAR szFreq779M[];
        static CONST TCHAR szFreq868M[];
        static CONST TCHAR szFreq915M[];

        // 传输速率映射表
        static const DWORD m_aTransSpeed[MAX_TRANS_SPEED_IDX + 1];
        // 315M、433M模块传输速率映射表，单位为kbps
        static const DWORD m_aTransSpeed_433M[MAX_TRANS_SPEED_IDX_433M + 1];
        // 779M、868M、915M模块传输速率映射表，单位为kbps
        static const DWORD m_aTransSpeed_868M[MAX_TRANS_SPEED_IDX_868M + 1];

        // 波特率序号和值的映射表
        static CONST DWORD m_aBaudRateMapTable[MAX_BAUDRATE_IDX];

        // 无效的波特率索引值
        static CONST DWORD INVALID_BAUDRATE_IDX = MAX_BAUDRATE_IDX + 1;

        static CONST DWORD INVALID_BAUDRATE_VALUE = 0;

        static CONST DWORD OFFSET_CUR_BAUDRATE_IDX = 0;
        static CONST DWORD OFFSET_BAUDRATE_MIN_IDX = 1;
        static CONST DWORD OFFSET_BAUDRATE_MAX_IDX = 2;
        static CONST DWORD OFFSET_CUR_COMM_CHANNEL_NUM = 3;
        static CONST DWORD OFFSET_MAX_COMM_CHANNEL_NUM = 4;
        static CONST DWORD OFFSET_CUR_TRANS_SPEED_LOW_BYTE = 5;
        static CONST DWORD OFFSET_CUR_TRANS_SPEED_HIGH_BYTE = 6;
        static CONST DWORD OFFSET_CUR_FREQ_LOW_BYTE = 7;
        static CONST DWORD OFFSET_CUR_FREQ_HIGH_BYTE = 8;
        static CONST DWORD OFFSET_CUR_ID_BYTE_0 = 9;
        static CONST DWORD OFFSET_CUR_ID_BYTE_1 = 10;
        static CONST DWORD OFFSET_CUR_ID_BYTE_2 = 11;
        static CONST DWORD OFFSET_CUR_ID_BYTE_3 = 12;
        static CONST DWORD OFFSET_DATE_YEAR = 13;
        static CONST DWORD OFFSET_DATE_MONTH = 14;
        static CONST DWORD OFFSET_DATE_DAY = 15;
        static CONST DWORD OFFSET_HARDWARE_LOW_VER = 16;
        static CONST DWORD OFFSET_HARDWARE_HIGH_VER = 17;
        static CONST DWORD OFFSET_SOFTWARE_VER_LOW_VER = 18;
        static CONST DWORD OFFSET_SOFTWARE_VER_HIGH_VER = 19;
        static CONST DWORD OFFSET_PRODUCT_TYPE_LOW_BYTE = 20;
        static CONST DWORD OFFSET_PRODUCT_TYPE_HIGH_BYTE = 21;
        static CONST DWORD OFFSET_MDL_NET_ID_HIGH_BYTE = 22;
        static CONST DWORD OFFSET_MDL_NET_ID_LOW_BYTE = 23;
        static CONST DWORD OFFSET_CHECKSUM = 24;

        // 串口通信超时时间值
        static CONST DWORD COMM_TIMEOUT = 500;

        // 无效的串口端口号
        static CONST DWORD INVALID_COM_PORT_NUM = 0;

        // 最小通信信道编号
        static CONST DWORD MIN_COMM_CHANNEL_NUM = 1;
        // 最大通信信道编号
        static CONST DWORD MAX_COMM_CHANNEL_NUM = 8;
        // 无效通信信道编号
        static CONST DWORD INVALID_COMM_CHANNEL_NUM = 0;

        // 固件升级相关常量定义
        static CONST CHAR STR_HUNTER_KING[];

        // 固件升级各个字段长度定义
        static CONST DWORD FIELD_LEN_PRESERVED_ID = 1;
        static CONST DWORD FIELD_LEN_PAGE_TOTAL = 2;
        static CONST DWORD FIELD_LEN_PAGE_SIZE = 2;
        static CONST DWORD FIELD_LEN_PAGE_NUM = 2;
        static CONST DWORD FIELD_LEN_PAGE_WRITE_STATUS = 1;
        static CONST DWORD FIELD_LEN_WRITE_PAGE_CODE_STATUS = 0X01;
        static CONST DWORD FIELD_LEN_UPDATE_FW_END_DATA = 2;
        static CONST DWORD FIELD_LEN_UPDATE_FW_END_ACK_CMD_DATA = 2;

        static CONST DWORD UPDATE_FIRMWARE_BAUDRATE = 115200;
        static CONST DWORD MAX_TRY_CONNECT_DEVICE_TIMES = 5;

        // 固件升级下发一页代码和读取一页代码之间间隔
        static CONST DWORD INTERVAL_TIME_READ_WRITE_PAGE = 0;

        // 固件升级发送连接设备命令的间隔时间
        static CONST DWORD INTERVAL_TIME_CONNECT_DEVICE = 50;

        static const DWORD MAX_MDL_NET_ID = 65536;
};

#define SHORT_HIGH_BYTE(SHORT_INT) (((SHORT_INT) >> 8) & 0XFF)
#define SHORT_LOW_BYTE(SHORT_INT) ((SHORT_INT) & 0XFF)

#define MERGE_BYTES_SHORT(HIGH_BYTE, LOW_BYTE) \
    (((USHORT)HIGH_BYTE << 8) | (LOW_BYTE))

// 各种消息定义
#define WM_PROGRESS_MAX_VALUE (WM_USER + 1)
#define WM_PROGRESS_INCREMENT (WM_PROGRESS_MAX_VALUE + 1)

// 固件升级过程中处理进度提示信息的消息
#define WM_FIRMWARE_UPGRADE_TIP (WM_PROGRESS_INCREMENT + 1)
// 固件升级过程中，升级开头显示进度条消息
#define WM_FW_UPGRADE_RESET_PROG_BAR (WM_FIRMWARE_UPGRADE_TIP + 1)


enum STATUS_CODE
{
    STATUS_SUCCESS                      = 0X00000001,
    STATUS_UPGRAD_FILE_TOO_BIG          = 0X00000002,
    STATUS_FAILED_TO_CONNECT_DEVICE     = 0X00000003,
    STATUS_FAILED_SEND_FIRMWARE_CODE    = 0X00000004,
    STATUS_FAILED_SEND_UPGRAD_END_CMD   = 0X00000005,
    STATUS_USER_FORCE_STOP_UPGRADE      = 0X00000006,
};

#endif  //_CPROTOCOLCONST_H
