//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CCfgBaudrateCmd.cpp
//  @ Date : 2014/11/5 ÐÇÆÚÈý
//  @ Author :
//
//

#include "stdafx.h"
#include "CfgBaudrateCmd.h"
#include "CmdFactory.h"
#include "../LogSystem.h"

CCfgBaudrateCmd::CCfgBaudrateCmd(CCommIntf* const pCommIntf, const DWORD dwBaudrate)
    : CCfgProtocol(pCommIntf)
{
    m_dwBaudrate = dwBaudrate;

}

CCfgBaudrateCmd::~CCfgBaudrateCmd()
{


}

BOOL CCfgBaudrateCmd::CreateSendCmd()
{
    LOG_TRACE_METHORD(TEXT("CCfgBaudrateCmd::CreateSendCmd func."));

    CCmdFactory CmdFactory;
    UCHAR cCmdData = GetBaudrateIndex();
    if (CProtocolConst::INVALID_BAUDRATE_IDX == cCmdData)
    {
        LOG_ERROR("Not find the index value of matching baudrate, failed !");
        return FALSE;
    }

    DWORD dwCmdDataLen = 1;
    m_pSendCmd = CmdFactory.createCmd(
                                 CProtocolConst::CMD_SET_BAUD,
                                 &cCmdData,
                                 dwCmdDataLen);
    if (NULL == m_pSendCmd)
    {
        LOG_ERROR("Create the protocol's cmd , failed !");
        return FALSE;
    }

    return TRUE;
}

BOOL CCfgBaudrateCmd::CreateAckCmd()
{
    CCmdFactory CmdFactory;
    m_pAckCmd = CmdFactory.createEmptyAckCmd(m_pSendCmd->GetCmdDataBufferLen());
    if (NULL == m_pAckCmd)
    {
        LOG_ERROR("Create the null ack cmd, failed !");
        return FALSE;
    }

    return TRUE;
}

BYTE CCfgBaudrateCmd::GetBaudrateIndex() const
{
    for (DWORD dwIdx = 0; dwIdx < sizeof(CProtocolConst::m_aBaudRateMapTable) / sizeof(DWORD); ++dwIdx)
    {
        if (m_dwBaudrate == CProtocolConst::m_aBaudRateMapTable[dwIdx])
        {
            BYTE dwBaudRateIdx = (BYTE)(dwIdx + 1);
            LOG_INFO("Get the baudrate index value : dwBaudRateIdx = " << dwBaudRateIdx <<
                     " m_dwBaudrate = " << m_dwBaudrate << " bps" );
            return dwBaudRateIdx;
        }
    }

    LOG_ERROR("Not find the matching index value same as baudrate : " << m_dwBaudrate);
    return CProtocolConst::INVALID_BAUDRATE_IDX;
}






