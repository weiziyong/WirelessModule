//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CCmd.h
//  @ Date : 2014/10/29 ÐÇÆÚÈý
//  @ Author :
//
//


#if !defined(_CCMD_H)
#define _CCMD_H

#include "ProtocolConst.h"

class CCmd
{
    public:
        CCmd();
        CCmd(const CCmd& Cmd);
        virtual ~CCmd();

        CCmd& operator= (const CCmd& Cmd);

        virtual DWORD GetCmdLen() const;
        virtual PBYTE GetCmdBuffer() const;
        virtual VOID SetFrameHead(const BYTE btFrameHead);
        virtual BYTE GetFrameHead() const;
        virtual VOID SetCmdPreserveWord(const BYTE btPreserveWord);
        virtual BYTE GetCmdPreserveWord() const;
        virtual VOID SetCmdWord(const BYTE btCmdWord);
        virtual BYTE GetCmdWord() const;
        virtual BOOL SetCmdData(const UCHAR* pCmdData, const DWORD dwDataLen);
        virtual BOOL SetCmdDataLen(const DWORD dwCmdDataLen);
        virtual PBYTE GetCmdDataBuffer() const;
        virtual DWORD GetCmdDataBufferLen() const;
        virtual VOID SetCmdChecksum(const BYTE dwChecksum);
        virtual BYTE GetChecksum() const;
        virtual BYTE CalcChecksum() const;

    private:
        BOOL IsInValidCmdDataLen(const DWORD dwCmdDataLen);

    protected:
        BYTE m_btCmd[CProtocolConst::CMD_BUF_LEN];
        DWORD m_dwCmdLen;
        DWORD m_dwCmdDataLen;
};

#endif  //_CCMD_H
